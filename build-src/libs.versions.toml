# Include me in settings.gradle.kts :)
# 
# dependencyResolutionManagement {
#   versionCatalogs {
#     create("libs") {
#       from(files("path/to/libs.versions.toml"))
#     }
#   }
# }
# 
[versions]
kotlin = "2.0.0"
java = "17"
agp = "8.2.2" # ! current stuck in 8.2.x due to https://youtrack.jetbrains.com/issue/IDEA-348937
# also we can't just simply make backend or desktop app to use Java 21 as it breaks the whole project
compose = "1.6.11"
essenty = "2.1.0"
decompose = "3.1.0"
mvikotlin = "4.1.0"
koin = "3.6.0-Beta4" # must use at least 3.6.x to make it work with Compose 1.6.x for JS platform
# otherwise will get "Function 'KoinContext' can not be called: No function found for symbol" error
# see https://kotlinlang.slack.com/archives/C67HDJZ2N/p1714069454044969
sqldelight = "2.0.2"

junit = "5.10.3"
http4k = "5.26.0.0"
exposed = "0.52.0"

[libraries]
# dev dep
# multiplatform
dev-serializationJson = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.0"
dev-kmlogging = "org.lighthousegames:logging:1.5.0"
dev-coroutinesBom = "org.jetbrains.kotlinx:kotlinx-coroutines-bom:1.8.1"
dev-essentyLifecycleCoroutines = { module = "com.arkivanov.essenty:lifecycle-coroutines", version.ref = "essenty" }
dev-decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
dev-decomposeCompose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
dev-mvikotlin = { module = "com.arkivanov.mvikotlin:mvikotlin", version.ref = "mvikotlin" }
dev-mvikotlinMain = { module = "com.arkivanov.mvikotlin:mvikotlin-main", version.ref = "mvikotlin" }
dev-mvikotlinCoroutines = { module = "com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines", version.ref = "mvikotlin" }
dev-mvikotlinLogging = { module = "com.arkivanov.mvikotlin:mvikotlin-logging", version.ref = "mvikotlin" }
dev-koinBom = { module = "io.insert-koin:koin-bom", version.ref = "koin" }
dev-kotlinWrapper = "org.jetbrains.kotlin-wrappers:kotlin-wrappers-bom:1.0.0-pre.763"
dev-windowSizeClassMultiplatform = "dev.chrisbanes.material3:material3-window-size-class-multiplatform:0.5.0"
dev-sqldelightDriver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
dev-sqldelightDriver-ios = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
dev-sqldelightDriver-jvm = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
dev-sqldelightDriver-webWorker = { module = "app.cash.sqldelight:web-worker-driver", version.ref = "sqldelight" }
dev-sqldelightCoroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

# android
dev-androidx-coreKtx = "androidx.core:core-ktx:1.13.1"
dev-androidx-appcompat = "androidx.appcompat:appcompat:1.7.0"
dev-androidx-lifecycleKtx = "androidx.lifecycle:lifecycle-runtime-ktx:2.8.3"
dev-androidx-activityCompose = "androidx.activity:activity-compose:1.9.0"

# backend
dev-http4kBom = { module = "org.http4k:http4k-bom", version.ref = "http4k" }
dev-exposedBom = { module = "org.jetbrains.exposed:exposed-bom", version.ref = "exposed" }
dev-junitBom = { module = "org.junit:junit-bom", version.ref = "junit" }
dev-kotestBom = "io.kotest:kotest-bom:5.9.1"
dev-kotestKoin = "io.kotest.extensions:kotest-extensions-koin:1.3.0"
dev-mockk = "io.mockk:mockk:1.13.12"
dev-sqlite = "org.xerial:sqlite-jdbc:3.46.0.0"
dev-hikari = "com.zaxxer:HikariCP:5.1.0"
dev-flyway = "org.flywaydb:flyway-core:10.16.0"
dev-logback = "ch.qos.logback:logback-classic:1.5.6"
dev-slf4j = "org.slf4j:slf4j-api:2.0.13"
dev-inlineLogging = "com.github.CXwudi:kotlin-jvm-inline-logging:1.0.1"

# plugin dep
pluginDep-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
pluginDep-kotlinCompose = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
pluginDep-android = { module = "com.android.tools.build:gradle", version.ref = "agp" }
pluginDep-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose" }
pluginDep-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }

# setting plugin dep
settingDep-develocity = "com.gradle.develocity:com.gradle.develocity.gradle.plugin:3.17.5"
settingDep-foojayResolver = "org.gradle.toolchains:foojay-resolver:0.8.0"

[plugins]
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
androidApplication = { id = "com.android.application", version.ref = "agp" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinCompose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
# a plugin used by gradle files for precompiled script plugin
buildConfig = { id = "com.github.gmazzo.buildconfig", version = "5.4.0" }